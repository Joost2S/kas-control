#!/usr/bin/python3

# Author: J. Saarloos
# v0.01.00	25-04-2019



from abc import ABCMeta, abstractmethod

from ...globstuff import globstuff as gs
from .hwbase import HWbase


class HWspoof(HWbase):

	__metaclass__ = ABCMeta

	def __init__(self):
		super(HWspoof, self).__init__()

	def toggleSpoof(self):
		"""Toggle between real sensor data or algorithmically generated data."""

		self.__spoof = not self.__spoof
		return(self.__spoof)

	def __getSpoofData(self, stype = None, name = None, caller = None):
		"""Returns fake sensor data generated by excessively advanced algorithms."""

		return("Stuff.")

	@abstractmethod
	def requestData(self, stype = None, name = None, caller = None, perc = False):
		return super().requestData(stype = stype, name = name, caller = caller, perc = perc)

	@abstractmethod
	def requestPower(self, *cur):
		return super().requestPower(cur)
